
###############################################################################
#                        Reference Sample Section
#
# The Reference Sample Section handles the configuration related with the
# objects used to find neighbors from. Two different types of reference samples
# can be used. The first is a directory build using the NNPZ tools, containing
# the reference sample in the NNPZ format (parameter reference_sample_dir_. The
# second is a reference catalog, containing photometry values for the same bands
# as the target catalog (ref_cat option). Note that only one of the two options
# can be used.
#
###############################################################################

#
# Reference Sample directory options:
#
# - reference_sample_dir
#       The directory containing the reference sample files
# - reference_sample_phot_file
#       The file containing the photometry of the reference sample, as produced
#       by the NnpzBuildPhotometry tool
# - reference_sample_phot_filters
#       The filters of the reference sample photometry to be used. They must
#       have the same order with the ones defined by the target_filters option
# - reference_sample_out_mean_phot_filters
#       A list of filters from the reference sample photometry file to compute
#       the weighted mean photometry for
#

#reference_sample_dir = '/disk2/OU-PHZ/NNPZ/ref_sample_20180410'
reference_sample_phot_file = '/disk2/OU-PHZ/NNPZ/ref_sample_20180410/F_nu_uJy.fits'
reference_sample_phot_filters = ['u', 'g', 'r', 'i', 'z', 'vis', 'Y', 'J', 'H']
reference_sample_out_mean_phot_filters = reference_sample_phot_filters

#
# Reference catalog options:
#
# - reference_catalog
#       An ASCII or FITS photometry catalog to be used as the the reference
#       sample
# - reference_catalog_filters
#       The columns of the reference catalog containing the photometry values.
#       They must have the same order with the ones defined by the
#       target_catalog_filters option
# - reference_catalog_redshift
#       The column containing the redshift of the reference catalog objects to
#       be used for all the NNPZ computations
# - reference_catalog_out_mean_phot_filters
#       A list of filters from the reference sample photometry file to compute
#       the weighted mean photometry for
#

#reference_catalog = '/disk2/OU-PHZ/DC3/jean/DC3.2.0/cats/euclid_emulated_DC3.2.0_COSMOS15_training_vis_detected.fits'
reference_catalog_filters = [
    ('u_obs', 'u_obs_err'),
    ('g_obs', 'g_obs_err'),
    ('r_obs', 'r_obs_err'),
    ('i_obs', 'i_obs_err'),
    ('z_obs', 'z_obs_err'),
    ('vis_obs', 'vis_obs_err'),
    ('Y_obs', 'Y_obs_err'),
    ('J_obs', 'J_obs_err'),
    ('H_obs', 'H_obs_err')
]
reference_catalog_redshift = 'z_true'
reference_catalog_out_mean_phot_filters = reference_catalog_filters

###############################################################################
#                       Target Catalog Section
#
# The Target Catalog Section handles the configuration related with the catalog
# to compute the photometric redshift for.
#
# Target catalog options:
#
# - target_catalog
#       The input photometric catalog, in FITS or ASCII format
# - target_catalog_filters
#       The columns of the target catalog containing the photometry values. They
#       must have the same order defined by the reference_catalog_filters option
# - target_catalog_gal_ebv
#       The two columns of the target catalog containing the E(B-V) and E(B-V) error
# - target_catalog_filters_mean
#       A dictionary where the key is the band name, and the value is the column on the
#       target catalog containing the average wavelength of the part of the filter that
#       influenced the measure.
# - missing_photometry_flags
#       A list containing all the values indicating missing data. Note that NaN
#       is implicitly translated to missing data.
# - input_size
#       Defines the number of rows of the input catalog to process
#
###############################################################################

target_catalog = '/disk2/OU-PHZ/DC3/jean/DC3.2.0/cats/euclid_emulated_DC3.2.0_COSMOS15_test_vis_detected.fits'
target_catalog_filters = [
    ('FLUX_U_EXT_OMEGACAM_APER', 'FLUXERR_U_EXT_OMEGACAM_APER'),
    ('FLUX_G_EXT_DECAM_APER', 'FLUXERR_G_EXT_DECAM_APER'),
    ('FLUX_R_EXT_DECAM_APER', 'FLUXERR_R_EXT_DECAM_APER'),
    ('FLUX_I_EXT_DECAM_APER', 'FLUXERR_I_EXT_DECAM_APER'),
    ('FLUX_Z_EXT_DECAM_APER', 'FLUXERR_Z_EXT_DECAM_APER'),
    ('FLUX_VIS_APER', 'FLUXERR_VIS_APER'),
    ('FLUX_Y_APER', 'FLUXERR_Y_APER'),
    ('FLUX_J_APER', 'FLUXERR_J_APER'),
    ('FLUX_H_APER', 'FLUXERR_H_APER')
]
target_catalog_id_column = 'OBJECT_ID'
#target_catalog_gal_ebv = ('GAL_EBV', None)
#target_catalog_filters_mean = {
#    'vis': 'AVG_TRANS_WAVE_VIS',
#    'Y': 'AVG_TRANS_WAVE_Y',
#    'J': 'AVG_TRANS_WAVE_J',
#    'H': 'AVG_TRANS_WAVE_H'
#}
missing_photometry_flags = [-99]
input_size = 1000

###############################################################################
#                     NNPZ Algorithm Options Section
#
# This section contains the options related with the NNPZ algorithm configuration.
#
# Neighbors selection options:
#
# - neighbor_method
#       The method to be used for selecting the neighbors. It can be one of:
#       - KDTree: Fastest method, finding the neighbors using Euclidean distance.
#           WARNING: All errors are ignored when this method is used.
#       - BruteForce: Finds the neighbors using chi2 distance, by computing the
#           chi2 of all objects in the reference sample. WARNING: This method
#           is much slower than the alternatives.
#       - Combined: This method first finds a batch of neighbors in Euclidean
#           distance using a KDTree and then it finds the closest neighbors inside
#           the batch, by using chi2 distance.
# - neighbors_no
#       The number of neighbors to be used
# - batch_size
#       The size of the batch size when the 'Combined' method is used
#
# Weight calculation options:
#
# - weight_method
#       The method to be used for computing the weights of the neighbors. It can
#       be one of:
#       - Euclidean: The inversed Euclidean distance (errors are ignored)
#       - Chi2: The inversed chi2
#       - Likelihood: The likelihood computed as exp(-chi2 / 2)
#
###############################################################################

neighbor_method = 'Combined'
batch_size = 2000
neighbors_no = 30
weight_method = 'Likelihood'

###############################################################################
#                      Output Section
#
# The Output Section handles the configuration related with the produced output.
#
# Avaiable options:
#
# - output_file
#       The file to store the output catalog
# - copy_input_columns
#       If True, the target catalog columns are copied to the output
# - neighbor_info_output
#       Add to the output catalog the reference sample neighbor IDs and weights
# - pdz_quantiles
#       A list with the PDZ quantiles to be added to the output
# - pdz_mc_samples
#       The number of Monte Carlo samples to get from the PDZ for each source
# - flags_in_separate_columns
#       When True, the catalog will contain a column for each flag. When False,
#       the flags wil be compressed by 8 per column.
#
###############################################################################

output_file = '/disk2/OU-PHZ/DC3/nnpz/out.fits'
copy_input_columns = True
neighbor_info_output = True
pdz_quantiles = [0.25, 0.5, 0.75]
pdz_mc_samples = 1
flags_in_separate_columns = False

###############################################################################
log_level = 'INFO'