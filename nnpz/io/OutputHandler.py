"""
Created on: 01/02/18
Author: Nikolaos Apostolakos
"""

from __future__ import division, print_function

import abc
import os

from astropy.io import fits
from astropy.table import Table


class OutputHandler(object):


    class OutputColumnProviderInterface(object):
        __metaclass__ = abc.ABCMeta

        @abc.abstractmethod
        def addContribution(self, reference_sample_i, catalog_i, weight):
            pass

        @abc.abstractmethod
        def getColumns(self):
            pass


    class OutputExtensionTableProviderInterface(object):
        __metaclass__ = abc.ABCMeta

        @abc.abstractmethod
        def addContribution(self, reference_sample_i, catalog_i, weight):
            pass

        @abc.abstractmethod
        def getExtensionTables(self):
            """
            Returns:
                A dictionary with additional astropy.Table, where the key is the table name
            """
            pass


    def __init__(self):
        self.__column_providers = []
        self.__hdu_providers = []


    def addColumnProvider(self, provider):
        self.__column_providers.append(provider)


    def addExtensionTableProvider(self, provider):
        self.__hdu_providers.append(provider)


    def addContribution(self, reference_sample_i, catalog_i, weight):
        for p in self.__column_providers:
            p.addContribution(reference_sample_i, catalog_i, weight)
        for hp in self.__hdu_providers:
            hp.addContribution(reference_sample_i, catalog_i, weight)


    def save(self, filename):
        hdu_list = []

        # Primary hdu
        hdr = fits.Header()
        hdr['COMMENT'] = 'Generated by nnpz'
        hdu_list.append(fits.PrimaryHDU(header=hdr))

        # Table with the results
        out = Table()
        for prov in self.__column_providers:
            for col in prov.getColumns():
                out.add_column(col)
        hdu_list.append(fits.table_to_hdu(out))

        # Extensions
        for hp in self.__hdu_providers:
            for name, table in hp.getExtensionTables().iteritems():
                ext_hdu = fits.table_to_hdu(table)
                ext_hdu.name = name
                hdu_list.append(ext_hdu)

        hdul = fits.HDUList(hdu_list)

        if os.path.exists(filename):
            os.remove(filename)
        hdul.writeto(filename)
